<?xml version="1.0"?>
<!--
  Tests dependency graph

  Copyright (C) 2016 LoVullo Associates, Inc.

    This file is part of TAME.

    TAME is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
    General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see
    <http://www.gnu.org/licenses/>.
-->
<description xmlns="http://www.jenitennison.com/xslt/xspec"
             xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
             xmlns:x="http://www.jenitennison.com/xslt/xspec"
             xmlns:graph="http://www.lovullo.com/tame/graph"
             xmlns:preproc="http://www.lovullo.com/rater/preproc"
             xmlns:foo="http://www.lovullo.com/_junk"
             stylesheet="graph-test.xsl">

  <scenario label="graph:dep-lookup">
    <scenario label="given a symbol">
      <scenario label="in the same package">
        <scenario label="where dependencies exist">
          <call function="graph:dep-lookup">
            <param name="symbol"
                   select="$foo:document/preproc:symtable
                             /preproc:sym[ @name='local' ]" />
            <param name="graph"
                   select="$foo:document/preproc:sym-deps" />

            <param name="lookup" select="()" />
          </call>

          <expect label="returns local dependencies"
                  test="$x:result is
                          $foo:document/preproc:sym-deps/preproc:sym-dep[
                            @name='local' ]" />
        </scenario>


        <scenario label="with external @src but local deps">
          <call function="graph:dep-lookup">
            <param name="symbol"
                   select="$foo:document/preproc:symtable
                             /preproc:sym[ @name='external-but-not' ]" />
            <param name="graph"
                   select="$foo:document/preproc:sym-deps" />

            <param name="lookup" select="()" />
          </call>

          <expect label="returns local dependencies"
                  test="$x:result is
                          $foo:document/preproc:sym-deps/preproc:sym-dep[
                            @name='external-but-not' ]" />
        </scenario>


        <scenario label="where dependencies are missing">
          <call function="graph:dep-lookup">
            <param name="symbol"
                   select="$foo:document/preproc:symtable
                             /preproc:sym[ @name='missing-deps' ]" />
            <param name="graph"
                   select="$foo:document/preproc:sym-deps" />

            <param name="lookup" select="()" />
          </call>

          <expect label="return empty sequence"
                  test="empty( $x:result )" />
        </scenario>
      </scenario>


      <scenario label="in a separate package">
        <variable name="foo:expected-lookup" as="element()">
          <foo:lookup-ok />
        </variable>

        <scenario label="where dependencies exist">
          <call function="graph:dep-lookup">
            <param name="symbol"
                   select="$foo:document/preproc:symtable
                             /preproc:sym[ @name='external' ]" />
            <param name="graph"
                   select="$foo:document/preproc:sym-deps" />

            <param name="lookup"
                   select="foo:lookup( $foo:expected-lookup )" />
          </call>

          <expect label="returns external dependenices"
                  test="exists( $x:result/foo:lookup-ok )" />
        </scenario>
      </scenario>
    </scenario>
  </scenario>
</description>
