[package]
name = "tamer"
version = "0.0.0"
authors = ["Mike Gerwitz <mike.gerwitz@ryansg.com>"]
description="TAME in Rust"
license="GPLv3+"
edition = "2018"

[profile.dev]
# Release-level optimizations.  Spending the extra couple of moments
# compile-time is well worth the huge savings we get at runtime.  Note that
# this is still every so slightly slower than a release build; see other
# profile options for release at
# <https://doc.rust-lang.org/cargo/reference/manifest.html>.
opt-level = 3

[profile.release]
lto = true

[profile.bench]
# We want our benchmarks to be representative of how well TAME will perform
# in a release.
lto = true

[dev-dependencies]
assert_cmd = "0.10"
predicates = "1"

[dependencies]
bumpalo = ">= 2.6.0"
fxhash = ">= 0.2.1"
petgraph = "0.5.1"  # TODO: petgraph-graphml holds this back
quick-xml = ">= 0.17.0"
getopts = "0.2"
exitcode = "1.1.2"
lazy_static = ">= 1.4.0"
petgraph-graphml = ">= 2.0.1"
static_assertions = ">= 1.1.0"
memchr = ">= 2.3.4"  # quick-xml expects =2.3.4 at the time
paste = ">= 1.0.5"

# Feature flags can be specified using `./configure FEATURES=foo,bar,baz`.
#
# Flags beginning with "wip-" are short-lived flags that exist only during
# development of a particular feature; you should not hard-code them
# anywhere, since the build will break once they are removed.  Enabling WIP
# flags should also be expected to cause undesirable behavior in some form
# or another.  Once WIP features are finalized, they are enabled by default
# and the flag removed.
[features]
# Process source files using available frontends rather than copying
# the files verbatim to XMLI files.  This begins the process of moving
# compilation from XSLT into TAMER, and so the XSLT-based compiler must be
# expecting it so that it can skip those compilation steps.
wip-frontends = []
